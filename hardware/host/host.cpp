#include "host_flow.cpp"
int main(int argc, char **argv)
{

    uint32_t instr_num = 5858;
    uint32_t instr_size = instr_num * 8;
    uint8_t num_krnl = 1;
    uint32_t bank_assign[2] = {0, 1};

    auto device = xrt::device(0);
    auto uuid = device.load_xclbin(argv[1]);
    std::cout << "IP generation..." << std::endl;
    std::vector<xrt::ip> ips{xrt::ip(device, uuid, "mem_kernel:{mem_kernel_1}")};

    xrt::bo bo_x[num_krnl], bo_yizo[num_krnl], bo_instr[num_krnl];
    uint8_t *bo_x_map[num_krnl], *bo_yizo_map[num_krnl];
    uint64_t *bo_instr_map[num_krnl];
    uint64_t bo_x_addr[num_krnl], bo_yizo_addr[num_krnl], bo_instr_addr[num_krnl];
    std::cout << "Buffer object mapping..." << std::endl;
    map_bo_gen(num_krnl, 2, bank_assign, device, 16384, 16384, instr_size, bo_x, bo_yizo, bo_instr, bo_x_map, bo_yizo_map, bo_instr_map);

    std::cout << "Instruction file object generation..." << std::endl;
    char *fp_list[num_krnl];
    std::string bin_file_array[num_krnl];
    for (int fid = 0; fid < num_krnl; fid++)
    {
        // You should change the path to the actual path of the instruction bin file generated by the compiler
        bin_file_array[fid] = "/vol/datastore/tata_vitis/test_tata_8hw_update/src/bert/bin_block.0.qkv/bin_core0.bin";
        fp_list[fid] = (char *)bin_file_array[fid].c_str();
    }

    std::cout << "Instruction load..." << std::endl;
    instr_load(fp_list, bo_instr_map, num_krnl, instr_num);

    std::cout << "Buffer object synchronization..." << std::endl;
    bo_sync(num_krnl, bo_x, bo_yizo, bo_instr, bo_x_addr, bo_yizo_addr, bo_instr_addr);

    std::cout << "Tata node operation..." << std::endl;
    tata_node_op(ips, num_krnl, instr_num, bo_instr_addr, bo_x_addr, bo_yizo_addr);

    std::cout << "Tata node synchronization..." << std::endl;
    tata_node_status(ips, num_krnl, 225000000, 128, 2, 256, num_krnl, num_krnl, 2, 1);

    return 0;
}